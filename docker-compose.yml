# docker-compose.yml

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      - PORT=${GATEWAY_PORT}
      - API_KEY=${API_KEY}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - GATEWAY_PORT=${GATEWAY_PORT}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - NODE_SERVICE_URL=${NODE_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - ADMIN_SERVICE_URL=${ADMIN_SERVICE_URL}
      - GOOGLE_SERVICE_URL=${GOOGLE_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT}
    depends_on:
      - auth-service
    networks:
      - app-network
    restart: unless-stopped

  auth-service:
    build:
      context: ./authservice
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
    networks:
      - app-network
    restart: unless-stopped

  google-service:
    build:
      context: ./googleservice
      dockerfile: Dockerfile
    environment:
      - PORT=${GOOGLE_SERVICE_PORT}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT}
      - API_KEY=${API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - GOOGLE_SERVICE_ACCOUNT_CREDENTIALS=${GOOGLE_SERVICE_ACCOUNT_CREDENTIALS}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    ports:
      - "${GOOGLE_SERVICE_PORT}:${GOOGLE_SERVICE_PORT}"
    networks:
      - app-network
    restart: unless-stopped

  node-service: 
    build:
      context: ./nodeservice
      dockerfile: Dockerfile
    ports: 
      - "${NODE_SERVICE_PORT}:${NODE_SERVICE_PORT}"
    environment:
      - "PORT=${NODE_SERVICE_PORT}"
      - "DATABASE_URL=${NODE_DATABASE_URL}"
      - "JWT_SECRET=${JWT_SECRET}"
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  admin-service: 
    build:
      context: ./adminservice
      dockerfile: Dockerfile
    ports: 
      - "${ADMIN_SERVICE_PORT}:${ADMIN_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    
  user-service:
    build: 
      context: ./userservice
      dockerfile: Dockerfile
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy 
    networks:
        - app-network
    environment:
      - PORT=${USER_SERVICE_PORT}
      - API_KEY=${API_KEY}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

    restart: unless-stopped

  payment-service:
    build:
      context: ./paymentservice
      dockerfile: Dockerfile
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    depends_on:
      mysql: 
        condition: service_healthy
    networks:
        - app-network
    volumes:
      - ./paymentservice/src/main/resources/application.properties:/app/application.properties  # Mounts properties file.
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:3306"
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
